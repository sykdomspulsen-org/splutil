[{"path":"https://docs.sykdomspulsen.no/splutil/articles/splutil.html","id":"splitting","dir":"Articles","previous_headings":"","what":"Splitting","title":"Introduction to splutil","text":"","code":"splutil::easy_split(letters[1:20], size_of_each_group = 3) #> $`1` #> [1] \"a\" \"b\" \"c\" #>  #> $`2` #> [1] \"d\" \"e\" \"f\" #>  #> $`3` #> [1] \"g\" \"h\" \"i\" #>  #> $`4` #> [1] \"j\" \"k\" \"l\" #>  #> $`5` #> [1] \"m\" \"n\" \"o\" #>  #> $`6` #> [1] \"p\" \"q\" \"r\" #>  #> $`7` #> [1] \"s\" \"t\" splutil::easy_split(letters[1:20], number_of_groups = 3) #> $`1` #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" #>  #> $`2` #> [1] \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" #>  #> $`3` #> [1] \"o\" \"p\" \"q\" \"r\" \"s\" \"t\""},{"path":"https://docs.sykdomspulsen.no/splutil/articles/splutil.html","id":"unnesting-data-frames","dir":"Articles","previous_headings":"","what":"Unnesting data.frames","title":"Introduction to splutil","text":"","code":"x <- list(   list(     \"a\" = data.frame(\"v1\"=1),     \"b\" = data.frame(\"v2\"=3)   ),   list(     \"a\" = data.frame(\"v1\"=10),     \"b\" = data.frame(\"v2\"=30),     \"d\" = data.frame(\"v3\"=50)   ) ) print(x) #> [[1]] #> [[1]]$a #>   v1 #> 1  1 #>  #> [[1]]$b #>   v2 #> 1  3 #>  #>  #> [[2]] #> [[2]]$a #>   v1 #> 1 10 #>  #> [[2]]$b #>   v2 #> 1 30 #>  #> [[2]]$d #>   v3 #> 1 50 splutil::unnest_dfs_within_list_of_fully_named_lists(x) #> $a #>    v1 #> 1:  1 #> 2: 10 #>  #> $b #>    v2 #> 1:  3 #> 2: 30 #>  #> $d #>    v3 #> 1: 50"},{"path":"https://docs.sykdomspulsen.no/splutil/articles/splutil.html","id":"describing-lists","dir":"Articles","previous_headings":"","what":"Describing lists","title":"Introduction to splutil","text":"","code":"splutil::is_fully_named_list(list(1)) #> [1] FALSE splutil::is_fully_named_list(list(\"a\"=1)) #> [1] TRUE  splutil::is_all_list_elements_null_or_df(list(data.frame())) #> [1] TRUE splutil::is_all_list_elements_null_or_df(list(1, NULL)) #> [1] FALSE  splutil::is_all_list_elements_null_or_list(list(1, NULL)) #> [1] FALSE splutil::is_all_list_elements_null_or_list(list(list(), NULL)) #> [1] TRUE  splutil::is_all_list_elements_null_or_fully_named_list(list(list(), NULL)) #> [1] FALSE splutil::is_all_list_elements_null_or_fully_named_list(list(list(\"a\" = 1), NULL)) #> [1] TRUE"},{"path":"https://docs.sykdomspulsen.no/splutil/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package proudly brought : Richard Aubrey White. Author, maintainer. . Copyright holder. See changelog contributors. 🙏","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"White RA (2022). splutil: Utility Functions Common Base-R Problems Relating Lists. https://docs.sykdomspulsen./splutil/, https://github.com/sykdomspulsen-org/splutil.","code":"@Manual{,   title = {splutil: Utility Functions for Common Base-R Problems Relating to Lists},   author = {Richard Aubrey White},   year = {2022},   note = {https://docs.sykdomspulsen.no/splutil/, https://github.com/sykdomspulsen-org/splutil}, }"},{"path":[]},{"path":"https://docs.sykdomspulsen.no/splutil/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Utility Functions for Common Base-R Problems Relating to Lists","text":"splutil contains helpful functions help common base-R problems. Read introduction vignette run help(package=\"splutil\").","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/index.html","id":"splverse","dir":"","previous_headings":"","what":"splverse","title":"Utility Functions for Common Base-R Problems Relating to Lists","text":"splverse set R packages developed help solve problems frequently occur performing infectious disease surveillance. want install dev versions (access packages haven’t released CRAN), run usethis::edit_r_profile() edit .Rprofile. write : Save file restart R. can now install splverse packages drat repository.","code":"options(   repos = structure(c(     SPLVERSE  = \"https://docs.sykdomspulsen.no/drat/\",     CRAN      = \"https://cran.rstudio.com\"   )) ) install.packages(\"splutil\")"},{"path":"https://docs.sykdomspulsen.no/splutil/license.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 Folkehelseinstituttet Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/easy_split.html","id":null,"dir":"Reference","previous_headings":"","what":"Split a vector into a list of vectors — easy_split","title":"Split a vector into a list of vectors — easy_split","text":"Easily split list list equally sized vectors.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/easy_split.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split a vector into a list of vectors — easy_split","text":"","code":"easy_split(x, size_of_each_group = NULL, number_of_groups = NULL)"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/easy_split.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split a vector into a list of vectors — easy_split","text":"x vector split size_of_each_group want split `x` number groups, `size_of_each_group` size number_of_groups many equally sized groups want?","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/easy_split.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split a vector into a list of vectors — easy_split","text":"list containing equally sized vectors.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/easy_split.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split a vector into a list of vectors — easy_split","text":"can either specify length list (via `number_of_groups`) length equally sized vectors within list element (via `size_of_each_group`). last element list can shorter elements.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/easy_split.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Split a vector into a list of vectors — easy_split","text":"","code":"easy_split(letters[1:20], size_of_each_group = 3) #> $`1` #> [1] \"a\" \"b\" \"c\" #>  #> $`2` #> [1] \"d\" \"e\" \"f\" #>  #> $`3` #> [1] \"g\" \"h\" \"i\" #>  #> $`4` #> [1] \"j\" \"k\" \"l\" #>  #> $`5` #> [1] \"m\" \"n\" \"o\" #>  #> $`6` #> [1] \"p\" \"q\" \"r\" #>  #> $`7` #> [1] \"s\" \"t\" #>  easy_split(letters[1:20], number_of_groups = 3) #> $`1` #> [1] \"a\" \"b\" \"c\" \"d\" \"e\" \"f\" \"g\" #>  #> $`2` #> [1] \"h\" \"i\" \"j\" \"k\" \"l\" \"m\" \"n\" #>  #> $`3` #> [1] \"o\" \"p\" \"q\" \"r\" \"s\" \"t\" #>"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Are all elements in a list null or data.frames? — is_all_list_elements_null_or_df","title":"Are all elements in a list null or data.frames? — is_all_list_elements_null_or_df","text":"Checks ) `x` list, B) elements `x` either null data.frame.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are all elements in a list null or data.frames? — is_all_list_elements_null_or_df","text":"","code":"is_all_list_elements_null_or_df(x)"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are all elements in a list null or data.frames? — is_all_list_elements_null_or_df","text":"x object","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are all elements in a list null or data.frames? — is_all_list_elements_null_or_df","text":"Boolean.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are all elements in a list null or data.frames? — is_all_list_elements_null_or_df","text":"","code":"is_all_list_elements_null_or_df(data.frame()) #> [1] FALSE is_all_list_elements_null_or_df(list(data.frame())) #> [1] TRUE is_all_list_elements_null_or_df(list(1, NULL)) #> [1] FALSE is_all_list_elements_null_or_df(list(data.frame(), NULL)) #> [1] TRUE is_all_list_elements_null_or_df(list(\"a\"=1, 2)) #> [1] FALSE"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_fully_named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","title":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","text":"Checks ) `x` list, B) elements `x` either null fully named lists.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_fully_named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","text":"","code":"is_all_list_elements_null_or_fully_named_list(x)"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_fully_named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","text":"x object","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_fully_named_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","text":"Boolean.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_fully_named_list.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","text":"Fully named lists lists element name.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_fully_named_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are all elements in a list null or fully named lists? — is_all_list_elements_null_or_fully_named_list","text":"","code":"is_all_list_elements_null_or_fully_named_list(data.frame()) #> [1] FALSE is_all_list_elements_null_or_fully_named_list(list(data.frame())) #> [1] FALSE is_all_list_elements_null_or_fully_named_list(list(1, NULL)) #> [1] FALSE is_all_list_elements_null_or_fully_named_list(list(list(), NULL)) #> [1] FALSE is_all_list_elements_null_or_fully_named_list(list(list(\"a\" = 1), NULL)) #> [1] TRUE is_all_list_elements_null_or_fully_named_list(list(\"a\"=1, 2)) #> [1] FALSE"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Are all elements in a list null or lists? — is_all_list_elements_null_or_list","title":"Are all elements in a list null or lists? — is_all_list_elements_null_or_list","text":"Checks ) `x` list, B) elements `x` either null list.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Are all elements in a list null or lists? — is_all_list_elements_null_or_list","text":"","code":"is_all_list_elements_null_or_list(x)"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Are all elements in a list null or lists? — is_all_list_elements_null_or_list","text":"x object","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Are all elements in a list null or lists? — is_all_list_elements_null_or_list","text":"Boolean.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_all_list_elements_null_or_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Are all elements in a list null or lists? — is_all_list_elements_null_or_list","text":"","code":"is_all_list_elements_null_or_list(data.frame()) #> [1] FALSE is_all_list_elements_null_or_list(list(data.frame())) #> [1] FALSE is_all_list_elements_null_or_list(list(1, NULL)) #> [1] FALSE is_all_list_elements_null_or_list(list(list(), NULL)) #> [1] TRUE is_all_list_elements_null_or_list(list(\"a\"=1, 2)) #> [1] FALSE"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_fully_named_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Is this a fully named list? — is_fully_named_list","title":"Is this a fully named list? — is_fully_named_list","text":"Checks `x` list element named.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_fully_named_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is this a fully named list? — is_fully_named_list","text":"","code":"is_fully_named_list(x)"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_fully_named_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Is this a fully named list? — is_fully_named_list","text":"x object","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_fully_named_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is this a fully named list? — is_fully_named_list","text":"Boolean.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/is_fully_named_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Is this a fully named list? — is_fully_named_list","text":"","code":"is_fully_named_list(list()) #> [1] FALSE is_fully_named_list(list(1)) #> [1] FALSE is_fully_named_list(list(\"a\"=1)) #> [1] TRUE is_fully_named_list(list(\"a\"=1, 2)) #> [1] FALSE"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/unnest_dfs_within_list_of_fully_named_lists.html","id":null,"dir":"Reference","previous_headings":"","what":"Unnest data.frames within fully named list — unnest_dfs_within_list_of_fully_named_lists","title":"Unnest data.frames within fully named list — unnest_dfs_within_list_of_fully_named_lists","text":"Consider situation function returns list containing two data.frames. function called repeatedly return values stored list, list fully named lists (contains data.frame). Typically, want extract two data.frames nested list structure (rbindlist ).","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/unnest_dfs_within_list_of_fully_named_lists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unnest data.frames within fully named list — unnest_dfs_within_list_of_fully_named_lists","text":"","code":"unnest_dfs_within_list_of_fully_named_lists(   x,   returned_name_when_dfs_are_not_nested = \"data\",   ... )"},{"path":"https://docs.sykdomspulsen.no/splutil/reference/unnest_dfs_within_list_of_fully_named_lists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unnest data.frames within fully named list — unnest_dfs_within_list_of_fully_named_lists","text":"x list fully named lists (contain data.frames) returned_name_when_dfs_are_not_nested x single list data.frames, name returned? ... parameters passed data.table::rbindlist","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/unnest_dfs_within_list_of_fully_named_lists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unnest data.frames within fully named list — unnest_dfs_within_list_of_fully_named_lists","text":"Fully named list, element containing data.table.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/reference/unnest_dfs_within_list_of_fully_named_lists.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Unnest data.frames within fully named list — unnest_dfs_within_list_of_fully_named_lists","text":"","code":"x <- list(   list(     \"a\" = data.frame(\"v1\"=1),     \"b\" = data.frame(\"v2\"=3)   ),   list(     \"a\" = data.frame(\"v1\"=10),     \"b\" = data.frame(\"v2\"=30),     \"d\" = data.frame(\"v3\"=50)   ),   list(     \"a\" = NULL   ),   NULL ) print(x) #> [[1]] #> [[1]]$a #>   v1 #> 1  1 #>  #> [[1]]$b #>   v2 #> 1  3 #>  #>  #> [[2]] #> [[2]]$a #>   v1 #> 1 10 #>  #> [[2]]$b #>   v2 #> 1 30 #>  #> [[2]]$d #>   v3 #> 1 50 #>  #>  #> [[3]] #> [[3]]$a #> NULL #>  #>  #> [[4]] #> NULL #>  splutil::unnest_dfs_within_list_of_fully_named_lists(x) #> $a #>    v1 #> 1:  1 #> 2: 10 #>  #> $b #>    v2 #> 1:  3 #> 2: 30 #>  #> $d #>    v3 #> 1: 50 #>   x <- list(   data.frame(\"v1\"=1),   data.frame(\"v3\"=50) ) print(x) #> [[1]] #>   v1 #> 1  1 #>  #> [[2]] #>   v3 #> 1 50 #>  splutil::unnest_dfs_within_list_of_fully_named_lists(   x,   returned_name_when_dfs_are_not_nested = \"NAME\",   fill = TRUE ) #> $NAME #>    v1 v3 #> 1:  1 NA #> 2: NA 50 #>"},{"path":"https://docs.sykdomspulsen.no/splutil/news/index.html","id":"splutil-2022620","dir":"Changelog","previous_headings":"","what":"splutil 2022.6.20","title":"splutil 2022.6.20","text":"Submitted CRAN Added additional documentation.","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/news/index.html","id":"splutil-202268","dir":"Changelog","previous_headings":"","what":"splutil 2022.6.8","title":"splutil 2022.6.8","text":"Submitted CRAN all_list_elements_null_or_df renamed is_all_list_elements_null_or_df all_list_elements_null_or_list renamed is_all_list_elements_null_or_list all_list_elements_null_or_fully_named_list renamed is_all_list_elements_null_or_fully_named_list split_equal renamed easy_split","code":""},{"path":"https://docs.sykdomspulsen.no/splutil/news/index.html","id":"splutil-2022428","dir":"Changelog","previous_headings":"","what":"splutil 2022.4.28","title":"splutil 2022.4.28","text":"split_equal (Split vector list equal sized elements) is_fully_named_list (fully named list?) all_list_elements_null_or_df (elements list null data.frames?) all_list_elements_null_or_list (elements list null lists?) all_list_elements_null_or_fully_named_list (elements list null fully named lists?) unnest_dfs_within_fully_named_list (Unnest data.frames within fully named list)","code":""}]
